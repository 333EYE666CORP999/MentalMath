# Directory and file filters

# Enabled/disabled rules
analyzer_rules:
  - unused_declaration
  - unused_import
opt_in_rules:
  - all
disabled_rules:
  - vertical_whitespace_opening_braces
  - anonymous_argument_in_multiline_closure
  - file_name
  - contrasted_opening_brace
  - prefer_key_path
  - private_subject
  - explicit_acl
  - explicit_enum_raw_value
  - explicit_top_level_acl
  - no_magic_numbers
  - trailing_comma
  - explicit_type_interface
  - file_types_order
  - indentation_width
  - inert_defer
  - missing_docs
  - unused_capture_list
  - multiline_function_chains
  - no_extension_access_modifier
  - no_grouping_extension
  - one_declaration_per_file
  - prefer_nimble
  - prefixed_toplevel_constant
  - required_deinit
  - sorted_enum_cases
  - strict_fileprivate
  - switch_case_on_newline
  - vertical_whitespace_between_cases

# Configurations
attributes:
  always_on_line_above:
    - "@ConfigurationElement"
    - "@OptionGroup"
    - "@RuleConfigurationDescriptionBuilder"
balanced_xctest_lifecycle: &unit_test_configuration
  test_parent_classes:
    - SwiftLintTestCase
    - XCTestCase
closure_body_length:
    warning: 50
    error: 100
empty_xctest_method: *unit_test_configuration
line_length:
  warning: 100
  error: 140
  ignores_comments: true
  ignores_urls: true
final_test_case: *unit_test_configuration
function_body_length: 60
identifier_name:
  excluded:
    - id
large_tuple: 3
number_separator:
  minimum_length: 5
redundant_type_annotation:
  consider_default_literal_types_redundant: true
single_test_class: *unit_test_configuration
type_body_length: 400
unneeded_override:
  affect_initializers: true
unused_import:
  always_keep_imports:
    - SwiftSyntaxBuilder # we can't detect uses of string interpolation of swift syntax nodes
    - SwiftLintFramework # now that this is a wrapper around other modules, don't treat as unused

# Custom rules
custom_rules:
  rule_id:
    included: Source/SwiftLintBuiltInRules/Rules/.+/\w+\.swift
    name: Rule ID
    message: Rule IDs must be all lowercase, snake case and not end with `rule`
    regex: ^\s+identifier:\s*("\w+_rule"|"\S*[^a-z_]\S*")
    severity: error
  rule_test_function:
    included: Tests/SwiftLintFrameworkTests/RulesTests.swift
    name: Rule Test Function
    message: Rule Test Function mustn't end with `rule`
    regex: func\s*test\w+(r|R)ule\(\)
    severity: error
